-- Create mentorship_features table
CREATE TABLE IF NOT EXISTS public.mentorship_features (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    icon_name VARCHAR(50) NOT NULL,
    gradient VARCHAR(100) NOT NULL,
    display_order INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Create update_updated_at trigger function
CREATE OR REPLACE FUNCTION public.update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc'::text, NOW());
    RETURN NEW;
END;
$$ language 'plpgsql';

-- Create trigger for mentorship_features
DROP TRIGGER IF EXISTS update_mentorship_features_updated_at ON public.mentorship_features;
CREATE TRIGGER update_mentorship_features_updated_at
    BEFORE UPDATE ON public.mentorship_features
    FOR EACH ROW
    EXECUTE FUNCTION public.update_updated_at_column();

-- Add RLS policies
ALTER TABLE public.mentorship_features ENABLE ROW LEVEL SECURITY;

-- Drop existing policies
DROP POLICY IF EXISTS "Anyone can view mentorship features" ON public.mentorship_features;
DROP POLICY IF EXISTS "Only admins can modify mentorship features" ON public.mentorship_features;

-- Policy for select (anyone can view)
CREATE POLICY "Anyone can view mentorship features"
    ON public.mentorship_features
    FOR SELECT
    USING (true);

-- Policy for insert/update/delete (only authenticated users)
CREATE POLICY "Only authenticated users can modify mentorship features"
    ON public.mentorship_features
    FOR ALL
    USING (auth.role() = 'authenticated');

-- Insert initial data
INSERT INTO public.mentorship_features (title, description, icon_name, gradient, display_order)
VALUES
    (
        'Expert Guidance',
        'Get personalized advice from certified nutrition experts who understand your goals',
        'FaUserGraduate',
        'from-blue-500 to-cyan-500',
        0
    ),
    (
        'Customized Plans',
        'Receive tailored nutrition and workout plans that fit your lifestyle',
        'FaChalkboardTeacher',
        'from-purple-500 to-pink-500',
        1
    ),
    (
        '1-on-1 Support',
        'Regular one-on-one sessions to track progress and adjust your plans',
        'FaHandshake',
        'from-green-500 to-teal-500',
        2
    ),
    (
        'Progress Tracking',
        'Monitor your improvements with advanced tracking tools and analytics',
        'FaChartLine',
        'from-orange-500 to-yellow-500',
        3
    ),
    (
        'Flexible Scheduling',
        'Book sessions at your convenience with our easy scheduling system',
        'FaCalendarCheck',
        'from-red-500 to-pink-500',
        4
    ),
    (
        'Community Support',
        'Join a community of like-minded individuals on their nutrition journey',
        'FaUsers',
        'from-indigo-500 to-purple-500',
        5
    );

-- Create index for faster ordering
DROP INDEX IF EXISTS mentorship_features_display_order_idx;
CREATE INDEX mentorship_features_display_order_idx ON public.mentorship_features(display_order);

-- Add table comments
COMMENT ON TABLE public.mentorship_features IS 'Stores features displayed on the mentorship page';
COMMENT ON COLUMN public.mentorship_features.title IS 'Feature title';
COMMENT ON COLUMN public.mentorship_features.description IS 'Feature description';
COMMENT ON COLUMN public.mentorship_features.icon_name IS 'Name of the icon component from react-icons/fa';
COMMENT ON COLUMN public.mentorship_features.gradient IS 'Tailwind CSS gradient classes';
COMMENT ON COLUMN public.mentorship_features.display_order IS 'Order in which features are displayed';
